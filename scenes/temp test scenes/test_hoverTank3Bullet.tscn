[gd_scene load_steps=5 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody
export var damage = 5
export var speed = 60
var hv
var collision
const packedDamage = preload(\"res://scenes/damageComponent.tscn\")
func _ready():
	pass
func setHeading(pv):
	hv = pv
	
func _physics_process(delta):
	if hv != null:
		collision = move_and_collide(hv.normalized()*speed*delta)
		if collision:
			var body = collision.get_collider()
			var damCompo = packedDamage.instance()
			damCompo.initDamage(body, damage,\"enemies\", collision)
			body.add_child(damCompo)
			queue_free()
			pass


func _on_deathTimer_timeout():
	queue_free()
	pass # Replace with function body.
"

[sub_resource type="QuadMesh" id=2]

[sub_resource type="SpatialMaterial" id=3]
flags_unshaded = true
params_blend_mode = 1
params_billboard_mode = 1
albedo_color = Color( 0.54902, 0, 0, 1 )

[sub_resource type="SphereShape" id=4]
radius = 0.512822

[node name="test_hoverTank3Bullet" type="KinematicBody"]
collision_layer = 4
script = SubResource( 1 )
damage = 15
speed = 80

[node name="MeshInstance" type="MeshInstance" parent="."]
mesh = SubResource( 2 )
material/0 = SubResource( 3 )

[node name="CollisionShape" type="CollisionShape" parent="."]
shape = SubResource( 4 )

[node name="deathTimer" type="Timer" parent="."]
wait_time = 3.0
one_shot = true
autostart = true
[connection signal="timeout" from="deathTimer" to="." method="_on_deathTimer_timeout"]
